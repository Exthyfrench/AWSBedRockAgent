{"ast":null,"code":"import _asyncToGenerator from \"C:/Devl/ChatBotAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"messagesContainer\"];\nconst _c1 = a0 => ({\n  \"flex-row-reverse space-x-reverse\": a0\n});\nconst _c2 = (a0, a1, a2) => ({\n  \"bg-blue-600\": a0,\n  \"bg-red-500\": a1,\n  \"bg-gray-600\": a2\n});\nconst _c3 = (a0, a1, a2) => ({\n  \"bg-blue-600 text-white\": a0,\n  \"bg-red-100 text-red-800 border border-red-200\": a1,\n  \"bg-white text-gray-800 border border-gray-200\": a2\n});\nconst _c4 = (a0, a1) => ({\n  \"text-blue-200\": a0,\n  \"text-gray-500\": a1\n});\nfunction BedrockChatComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 26);\n    i0.ɵɵelement(2, \"path\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(3, \"h3\", 27);\n    i0.ɵɵtext(4, \"Welcome to your Bedrock Agent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 28);\n    i0.ɵɵtext(6, \"Start a conversation by typing a message below.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction BedrockChatComponent_div_18__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 35);\n    i0.ɵɵelement(1, \"path\", 36);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BedrockChatComponent_div_18__svg_svg_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 35);\n    i0.ɵɵelement(1, \"path\", 8);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BedrockChatComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30);\n    i0.ɵɵtemplate(2, BedrockChatComponent_div_18__svg_svg_2_Template, 2, 0, \"svg\", 31)(3, BedrockChatComponent_div_18__svg_svg_3_Template, 2, 0, \"svg\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 32)(5, \"p\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 34);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, message_r2.sender === \"user\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(10, _c2, message_r2.sender === \"user\", message_r2.sender === \"bot\" && message_r2.isError, message_r2.sender === \"bot\" && !message_r2.isError));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", message_r2.sender === \"user\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", message_r2.sender === \"bot\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(14, _c3, message_r2.sender === \"user\", message_r2.sender === \"bot\" && message_r2.isError, message_r2.sender === \"bot\" && !message_r2.isError));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.text);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c4, message_r2.sender === \"user\", message_r2.sender === \"bot\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.formatTime(message_r2.timestamp), \" \");\n  }\n}\nfunction BedrockChatComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"div\", 38);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 35);\n    i0.ɵɵelement(3, \"path\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"div\", 39)(5, \"div\", 40);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(6, \"svg\", 41);\n    i0.ɵɵelement(7, \"circle\", 42)(8, \"path\", 43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(9, \"span\", 44);\n    i0.ɵɵtext(10, \"Agent is thinking...\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction BedrockChatComponent__svg_svg_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 45);\n    i0.ɵɵelement(1, \"circle\", 42)(2, \"path\", 43);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BedrockChatComponent__svg_svg_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 46);\n    i0.ɵɵelement(1, \"path\", 47);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class BedrockChatComponent {\n  constructor() {\n    this.messages = [];\n    this.inputMessage = '';\n    this.isLoading = false;\n    this.config = {\n      region: 'us-east-1',\n      agentId: 'your-agent-id',\n      agentAliasId: 'your-agent-alias-id',\n      sessionId: `session-${Date.now()}`,\n      accessKeyId: '',\n      secretAccessKey: '',\n      sessionToken: ''\n    };\n  }\n  ngOnInit() {\n    // Component initialization\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  scrollToBottom() {\n    try {\n      if (this.messagesContainer) {\n        this.messagesContainer.nativeElement.scrollTop = this.messagesContainer.nativeElement.scrollHeight;\n      }\n    } catch (err) {\n      console.error('Error scrolling to bottom:', err);\n    }\n  }\n  callBedrockAgent(message) {\n    return _asyncToGenerator(function* () {\n      try {\n        // This is where you would implement the actual AWS Bedrock agent call\n        // Example structure:\n        /*\n        import { BedrockAgentRuntimeClient, InvokeAgentCommand } from \"@aws-sdk/client-bedrock-agent-runtime\";\n        \n        const client = new BedrockAgentRuntimeClient({\n          region: this.config.region,\n          credentials: {\n            accessKeyId: this.config.accessKeyId,\n            secretAccessKey: this.config.secretAccessKey,\n            sessionToken: this.config.sessionToken\n          }\n        });\n               const command = new InvokeAgentCommand({\n          agentId: this.config.agentId,\n          agentAliasId: this.config.agentAliasId,\n          sessionId: this.config.sessionId,\n          inputText: message\n        });\n               const response = await client.send(command);\n        return response.completion;\n        */\n        // Mock response for demonstration\n        yield new Promise(resolve => setTimeout(resolve, 1000));\n        return `This is a mock response to: \"${message}\". Replace the callBedrockAgent function with your actual AWS Bedrock agent integration.`;\n      } catch (error) {\n        console.error('Error calling Bedrock agent:', error);\n        throw new Error('Failed to get response from Bedrock agent');\n      }\n    })();\n  }\n  sendMessage() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.inputMessage.trim()) return;\n      const userMessage = {\n        id: Date.now(),\n        text: _this.inputMessage,\n        sender: 'user',\n        timestamp: new Date()\n      };\n      _this.messages.push(userMessage);\n      const currentMessage = _this.inputMessage;\n      _this.inputMessage = '';\n      _this.isLoading = true;\n      try {\n        const response = yield _this.callBedrockAgent(currentMessage);\n        const botMessage = {\n          id: Date.now() + 1,\n          text: response,\n          sender: 'bot',\n          timestamp: new Date()\n        };\n        _this.messages.push(botMessage);\n      } catch (error) {\n        const errorMessage = {\n          id: Date.now() + 1,\n          text: 'Sorry, I encountered an error while processing your request. Please try again.',\n          sender: 'bot',\n          timestamp: new Date(),\n          isError: true\n        };\n        _this.messages.push(errorMessage);\n      } finally {\n        _this.isLoading = false;\n      }\n    })();\n  }\n  onKeyPress(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n  clearMessages() {\n    this.messages = [];\n    this.config.sessionId = `session-${Date.now()}`;\n  }\n  formatTime(timestamp) {\n    return timestamp.toLocaleTimeString();\n  }\n  static {\n    this.ɵfac = function BedrockChatComponent_Factory(t) {\n      return new (t || BedrockChatComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BedrockChatComponent,\n      selectors: [[\"app-bedrock-chat\"]],\n      viewQuery: function BedrockChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messagesContainer = _t.first);\n        }\n      },\n      decls: 33,\n      vars: 7,\n      consts: [[\"messagesContainer\", \"\"], [1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-blue-50\", \"to-blue-100\"], [1, \"container\", \"mx-auto\", \"max-w-4xl\", \"h-screen\", \"flex\", \"flex-col\"], [1, \"bg-white\", \"shadow-sm\", \"border-b\", \"border-blue-200\", \"p-4\"], [1, \"flex\", \"items-center\", \"justify-between\"], [1, \"flex\", \"items-center\", \"space-x-3\"], [1, \"w-10\", \"h-10\", \"bg-blue-600\", \"rounded-full\", \"flex\", \"items-center\", \"justify-center\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"w-6\", \"h-6\", \"text-white\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-800\"], [1, \"text-sm\", \"text-gray-500\"], [1, \"px-4\", \"py-2\", \"text-sm\", \"bg-blue-100\", \"text-blue-700\", \"rounded-lg\", \"hover:bg-blue-200\", \"transition-colors\", 3, \"click\"], [1, \"flex-1\", \"overflow-y-auto\", \"p-4\", \"space-y-4\"], [\"class\", \"text-center py-12\", 4, \"ngIf\"], [\"class\", \"flex items-start space-x-3\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"flex items-start space-x-3\", 4, \"ngIf\"], [1, \"bg-white\", \"border-t\", \"border-blue-200\", \"p-4\"], [1, \"flex\", \"items-end\", \"space-x-3\"], [1, \"flex-1\"], [\"placeholder\", \"Type your message here...\", \"rows\", \"1\", 1, \"w-full\", \"px-4\", \"py-3\", \"border\", \"border-gray-300\", \"rounded-2xl\", \"resize-none\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-blue-500\", \"focus:border-transparent\", 2, \"min-height\", \"50px\", \"max-height\", \"120px\", 3, \"ngModelChange\", \"keypress\", \"ngModel\"], [1, \"flex-shrink-0\", \"w-12\", \"h-12\", \"bg-blue-600\", \"text-white\", \"rounded-full\", \"flex\", \"items-center\", \"justify-center\", \"hover:bg-blue-700\", \"disabled:bg-gray-300\", \"disabled:cursor-not-allowed\", \"transition-colors\", 3, \"click\", \"disabled\"], [\"class\", \"w-5 h-5 animate-spin\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"w-5 h-5\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [1, \"mt-3\", \"p-3\", \"bg-blue-50\", \"rounded-lg\"], [1, \"text-xs\", \"text-blue-700\"], [1, \"text-center\", \"py-12\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"w-16\", \"h-16\", \"text-blue-300\", \"mx-auto\", \"mb-4\"], [1, \"text-lg\", \"font-medium\", \"text-gray-600\", \"mb-2\"], [1, \"text-gray-500\"], [1, \"flex\", \"items-start\", \"space-x-3\", 3, \"ngClass\"], [1, \"flex-shrink-0\", \"w-8\", \"h-8\", \"rounded-full\", \"flex\", \"items-center\", \"justify-center\", 3, \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"w-4 h-4 text-white\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [1, \"max-w-xs\", \"lg:max-w-md\", \"xl:max-w-lg\", \"px-4\", \"py-3\", \"rounded-2xl\", 3, \"ngClass\"], [1, \"text-sm\", \"whitespace-pre-wrap\"], [1, \"text-xs\", \"mt-1\", 3, \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"w-4\", \"h-4\", \"text-white\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"], [1, \"flex\", \"items-start\", \"space-x-3\"], [1, \"flex-shrink-0\", \"w-8\", \"h-8\", \"bg-gray-600\", \"rounded-full\", \"flex\", \"items-center\", \"justify-center\"], [1, \"bg-white\", \"border\", \"border-gray-200\", \"px-4\", \"py-3\", \"rounded-2xl\"], [1, \"flex\", \"items-center\", \"space-x-2\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 1, \"w-4\", \"h-4\", \"animate-spin\", \"text-blue-600\"], [\"cx\", \"12\", \"cy\", \"12\", \"r\", \"10\", \"stroke\", \"currentColor\", \"stroke-width\", \"4\", 1, \"opacity-25\"], [\"fill\", \"currentColor\", \"d\", \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\", 1, \"opacity-75\"], [1, \"text-sm\", \"text-gray-600\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 1, \"w-5\", \"h-5\", \"animate-spin\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"w-5\", \"h-5\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"]],\n      template: function BedrockChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"div\", 6);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(6, \"svg\", 7);\n          i0.ɵɵelement(7, \"path\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(8, \"div\")(9, \"h1\", 9);\n          i0.ɵɵtext(10, \"AWS Bedrock Agent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"p\", 10);\n          i0.ɵɵtext(12, \"Powered by Amazon Bedrock\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function BedrockChatComponent_Template_button_click_13_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.clearMessages());\n          });\n          i0.ɵɵtext(14, \" Clear Chat \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 12, 0);\n          i0.ɵɵtemplate(17, BedrockChatComponent_div_17_Template, 7, 0, \"div\", 13)(18, BedrockChatComponent_div_18_Template, 9, 21, \"div\", 14)(19, BedrockChatComponent_div_19_Template, 11, 0, \"div\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 16)(21, \"div\", 17)(22, \"div\", 18)(23, \"textarea\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function BedrockChatComponent_Template_textarea_ngModelChange_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.inputMessage, $event) || (ctx.inputMessage = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"keypress\", function BedrockChatComponent_Template_textarea_keypress_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onKeyPress($event));\n          });\n          i0.ɵɵtext(24, \"          \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function BedrockChatComponent_Template_button_click_25_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendMessage());\n          });\n          i0.ɵɵtemplate(26, BedrockChatComponent__svg_svg_26_Template, 3, 0, \"svg\", 21)(27, BedrockChatComponent__svg_svg_27_Template, 2, 0, \"svg\", 22);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 23)(29, \"p\", 24)(30, \"strong\");\n          i0.ɵɵtext(31, \"Note:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(32, \" Update the configuration object in the component with your actual AWS Bedrock agent details and implement the callBedrockAgent function with proper AWS SDK integration. \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngIf\", ctx.messages.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.inputMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.inputMessage.trim() || ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiZWRyb2NrLWNoYXQuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYmVkcm9jay1jaGF0L2JlZHJvY2stY2hhdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsNEtBQTRLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵtemplate","BedrockChatComponent_div_18__svg_svg_2_Template","BedrockChatComponent_div_18__svg_svg_3_Template","ɵɵproperty","ɵɵpureFunction1","_c1","message_r2","sender","ɵɵadvance","ɵɵpureFunction3","_c2","isError","_c3","ɵɵtextInterpolate","text","ɵɵpureFunction2","_c4","ɵɵtextInterpolate1","ctx_r2","formatTime","timestamp","BedrockChatComponent","constructor","messages","inputMessage","isLoading","config","region","agentId","agentAliasId","sessionId","Date","now","accessKeyId","secretAccessKey","sessionToken","ngOnInit","ngAfterViewChecked","scrollToBottom","messagesContainer","nativeElement","scrollTop","scrollHeight","err","console","error","callBedrockAgent","message","_asyncToGenerator","Promise","resolve","setTimeout","Error","sendMessage","_this","trim","userMessage","id","push","currentMessage","response","botMessage","errorMessage","onKeyPress","event","key","shiftKey","preventDefault","clearMessages","toLocaleTimeString","selectors","viewQuery","BedrockChatComponent_Query","rf","ctx","ɵɵlistener","BedrockChatComponent_Template_button_click_13_listener","ɵɵrestoreView","_r1","ɵɵresetView","BedrockChatComponent_div_17_Template","BedrockChatComponent_div_18_Template","BedrockChatComponent_div_19_Template","ɵɵtwoWayListener","BedrockChatComponent_Template_textarea_ngModelChange_23_listener","$event","ɵɵtwoWayBindingSet","BedrockChatComponent_Template_textarea_keypress_23_listener","BedrockChatComponent_Template_button_click_25_listener","BedrockChatComponent__svg_svg_26_Template","BedrockChatComponent__svg_svg_27_Template","length","ɵɵtwoWayProperty"],"sources":["C:\\Devl\\ChatBotAngular\\src\\app\\bedrock-chat\\bedrock-chat.component.ts","C:\\Devl\\ChatBotAngular\\src\\app\\bedrock-chat\\bedrock-chat.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewChecked, ElementRef, ViewChild } from '@angular/core';\r\n\r\ninterface ChatMessage {\r\n  id: number;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  isError?: boolean;\r\n}\r\n\r\ninterface BedrockConfig {\r\n  region: string;\r\n  agentId: string;\r\n  agentAliasId: string;\r\n  sessionId: string;\r\n  accessKeyId: string;\r\n  secretAccessKey: string;\r\n  sessionToken?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-bedrock-chat',\r\n  templateUrl: './bedrock-chat.component.html',\r\n  styleUrls: ['./bedrock-chat.component.scss']\r\n})\r\nexport class BedrockChatComponent implements OnInit, AfterViewChecked {\r\n  @ViewChild('messagesContainer') private messagesContainer!: ElementRef;\r\n  \r\n  messages: ChatMessage[] = [];\r\n  inputMessage = '';\r\n  isLoading = false;\r\n\r\n  config: BedrockConfig = {\r\n    region: 'us-east-1',\r\n    agentId: 'your-agent-id',\r\n    agentAliasId: 'your-agent-alias-id',\r\n    sessionId: `session-${Date.now()}`,\r\n    accessKeyId: '',\r\n    secretAccessKey: '',\r\n    sessionToken: ''\r\n  };\r\n\r\n  ngOnInit() {\r\n    // Component initialization\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    try {\r\n      if (this.messagesContainer) {\r\n        this.messagesContainer.nativeElement.scrollTop = this.messagesContainer.nativeElement.scrollHeight;\r\n      }\r\n    } catch(err) {\r\n      console.error('Error scrolling to bottom:', err);\r\n    }\r\n  }\r\n\r\n  async callBedrockAgent(message: string): Promise<string> {\r\n    try {\r\n      // This is where you would implement the actual AWS Bedrock agent call\r\n      // Example structure:\r\n      /*\r\n      import { BedrockAgentRuntimeClient, InvokeAgentCommand } from \"@aws-sdk/client-bedrock-agent-runtime\";\r\n      \r\n      const client = new BedrockAgentRuntimeClient({\r\n        region: this.config.region,\r\n        credentials: {\r\n          accessKeyId: this.config.accessKeyId,\r\n          secretAccessKey: this.config.secretAccessKey,\r\n          sessionToken: this.config.sessionToken\r\n        }\r\n      });\r\n\r\n      const command = new InvokeAgentCommand({\r\n        agentId: this.config.agentId,\r\n        agentAliasId: this.config.agentAliasId,\r\n        sessionId: this.config.sessionId,\r\n        inputText: message\r\n      });\r\n\r\n      const response = await client.send(command);\r\n      return response.completion;\r\n      */\r\n\r\n      // Mock response for demonstration\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      return `This is a mock response to: \"${message}\". Replace the callBedrockAgent function with your actual AWS Bedrock agent integration.`;\r\n    } catch (error) {\r\n      console.error('Error calling Bedrock agent:', error);\r\n      throw new Error('Failed to get response from Bedrock agent');\r\n    }\r\n  }\r\n\r\n  async sendMessage() {\r\n    if (!this.inputMessage.trim()) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now(),\r\n      text: this.inputMessage,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    this.messages.push(userMessage);\r\n    const currentMessage = this.inputMessage;\r\n    this.inputMessage = '';\r\n    this.isLoading = true;\r\n\r\n    try {\r\n      const response = await this.callBedrockAgent(currentMessage);\r\n      \r\n      const botMessage: ChatMessage = {\r\n        id: Date.now() + 1,\r\n        text: response,\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n\r\n      this.messages.push(botMessage);\r\n    } catch (error) {\r\n      const errorMessage: ChatMessage = {\r\n        id: Date.now() + 1,\r\n        text: 'Sorry, I encountered an error while processing your request. Please try again.',\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        isError: true\r\n      };\r\n      this.messages.push(errorMessage);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: KeyboardEvent) {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      this.sendMessage();\r\n    }\r\n  }\r\n\r\n  clearMessages() {\r\n    this.messages = [];\r\n    this.config.sessionId = `session-${Date.now()}`;\r\n  }\r\n\r\n  formatTime(timestamp: Date): string {\r\n    return timestamp.toLocaleTimeString();\r\n  }\r\n}","<div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-blue-100\">\r\n  <div class=\"container mx-auto max-w-4xl h-screen flex flex-col\">\r\n    \r\n    <!-- Header -->\r\n    <div class=\"bg-white shadow-sm border-b border-blue-200 p-4\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <div class=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n            </svg>\r\n          </div>\r\n          <div>\r\n            <h1 class=\"text-xl font-semibold text-gray-800\">AWS Bedrock Agent</h1>\r\n            <p class=\"text-sm text-gray-500\">Powered by Amazon Bedrock</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          (click)=\"clearMessages()\"\r\n          class=\"px-4 py-2 text-sm bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\">\r\n          Clear Chat\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Messages Container -->\r\n    <div #messagesContainer class=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n      \r\n      <!-- Empty State -->\r\n      <div *ngIf=\"messages.length === 0\" class=\"text-center py-12\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-16 h-16 text-blue-300 mx-auto mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n        </svg>\r\n        <h3 class=\"text-lg font-medium text-gray-600 mb-2\">Welcome to your Bedrock Agent</h3>\r\n        <p class=\"text-gray-500\">Start a conversation by typing a message below.</p>\r\n      </div>\r\n\r\n      <!-- Messages -->\r\n      <div *ngFor=\"let message of messages\" \r\n           [ngClass]=\"{'flex-row-reverse space-x-reverse': message.sender === 'user'}\"\r\n           class=\"flex items-start space-x-3\">\r\n        \r\n        <!-- Avatar -->\r\n        <div [ngClass]=\"{\r\n          'bg-blue-600': message.sender === 'user',\r\n          'bg-red-500': message.sender === 'bot' && message.isError,\r\n          'bg-gray-600': message.sender === 'bot' && !message.isError\r\n        }\" class=\"flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center\">\r\n          \r\n          <!-- User Icon -->\r\n          <svg *ngIf=\"message.sender === 'user'\" xmlns=\"http://www.w3.org/2000/svg\" \r\n               class=\"w-4 h-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n          </svg>\r\n          \r\n          <!-- Bot Icon -->\r\n          <svg *ngIf=\"message.sender === 'bot'\" xmlns=\"http://www.w3.org/2000/svg\" \r\n               class=\"w-4 h-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n          </svg>\r\n        </div>\r\n        \r\n        <!-- Message Bubble -->\r\n        <div [ngClass]=\"{\r\n          'bg-blue-600 text-white': message.sender === 'user',\r\n          'bg-red-100 text-red-800 border border-red-200': message.sender === 'bot' && message.isError,\r\n          'bg-white text-gray-800 border border-gray-200': message.sender === 'bot' && !message.isError\r\n        }\" class=\"max-w-xs lg:max-w-md xl:max-w-lg px-4 py-3 rounded-2xl\">\r\n          \r\n          <p class=\"text-sm whitespace-pre-wrap\">{{ message.text }}</p>\r\n          <p [ngClass]=\"{\r\n            'text-blue-200': message.sender === 'user',\r\n            'text-gray-500': message.sender === 'bot'\r\n          }\" class=\"text-xs mt-1\">\r\n            {{ formatTime(message.timestamp) }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading Indicator -->\r\n      <div *ngIf=\"isLoading\" class=\"flex items-start space-x-3\">\r\n        <div class=\"flex-shrink-0 w-8 h-8 bg-gray-600 rounded-full flex items-center justify-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-4 h-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n          </svg>\r\n        </div>\r\n        <div class=\"bg-white border border-gray-200 px-4 py-3 rounded-2xl\">\r\n          <div class=\"flex items-center space-x-2\">\r\n            <svg class=\"w-4 h-4 animate-spin text-blue-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            <span class=\"text-sm text-gray-600\">Agent is thinking...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Input Area -->\r\n    <div class=\"bg-white border-t border-blue-200 p-4\">\r\n      <div class=\"flex items-end space-x-3\">\r\n        <div class=\"flex-1\">\r\n          <textarea\r\n            [(ngModel)]=\"inputMessage\"\r\n            (keypress)=\"onKeyPress($event)\"\r\n            placeholder=\"Type your message here...\"\r\n            rows=\"1\"\r\n            class=\"w-full px-4 py-3 border border-gray-300 rounded-2xl resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            style=\"min-height: 50px; max-height: 120px;\">\r\n          </textarea>\r\n        </div>\r\n        <button\r\n          (click)=\"sendMessage()\"\r\n          [disabled]=\"!inputMessage.trim() || isLoading\"\r\n          class=\"flex-shrink-0 w-12 h-12 bg-blue-600 text-white rounded-full flex items-center justify-center hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\">\r\n          \r\n          <!-- Loading Spinner -->\r\n          <svg *ngIf=\"isLoading\" class=\"w-5 h-5 animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          \r\n          <!-- Send Icon -->\r\n          <svg *ngIf=\"!isLoading\" xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Configuration hint -->\r\n      <div class=\"mt-3 p-3 bg-blue-50 rounded-lg\">\r\n        <p class=\"text-xs text-blue-700\">\r\n          <strong>Note:</strong> Update the configuration object in the component with your actual AWS Bedrock agent details and implement the callBedrockAgent function with proper AWS SDK integration.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}